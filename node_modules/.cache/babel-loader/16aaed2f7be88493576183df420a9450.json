{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rexp2\\\\Documents\\\\Lyche\\\\FireWatch_andreas\\\\src\\\\pages\\\\app\\\\components\\\\GetUsersTest.jsx\",\n    _s = $RefreshSig$();\n\nimport { GET_FIRES } from \"../../../scripts/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function getFires() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_FIRES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  console.log(data);\n  return data.getAllFires({\n    sort: \"asc\"\n  }).map(({\n    day,\n    month,\n    temp,\n    RH,\n    wind,\n    rain,\n    area\n  }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [day, \" : \", month, \" : \", temp, \" : \", RH, \" : \", wind, \" : \", rain, \" : \", area]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this));\n}\n\n_s(getFires, \"NJO9NPV8HEY5DII4P9Hv5C7omuw=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["C:/Users/Rexp2/Documents/Lyche/FireWatch_andreas/src/pages/app/components/GetUsersTest.jsx"],"names":["GET_FIRES","useQuery","React","getFires","loading","error","data","console","log","getAllFires","sort","map","day","month","temp","RH","wind","rain","area"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SACIC,QADJ,QAES,gBAFT;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA0BL,QAAQ,CAACD,SAAD,CAAxC;AACA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOA,IAAI,CAACG,WAAL,CAAiB;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAjB,EAAgCC,GAAhC,CAAoC,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,EAAnB;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA;AAAnC,GAAD,kBACvC,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAA,iBACKN,GADL,SACaC,KADb,SACuBC,IADvB,SACgCC,EADhC,SACuCC,IADvC,SACgDC,IADhD,SACyDC,IADzD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAOH;;GAbuBf,Q;UACYF,Q","sourcesContent":["import { GET_FIRES } from \"../../../scripts/queries\";\r\nimport {\r\n    useQuery,\r\n  } from \"@apollo/client\";\r\nimport React from \"react\";\r\n\r\nexport default function getFires() {\r\n    const {loading, error, data } = useQuery(GET_FIRES)\r\n    if (loading) return <p>Loading...</p>\r\n    if (error) return <p>Error: {error}</p>\r\n    \r\n    console.log(data);\r\n    return data.getAllFires({sort: \"asc\"}).map(({day, month, temp, RH, wind, rain, area}) => (\r\n        <React.Fragment>\r\n            <p>\r\n                {day} : {month} : {temp} : {RH} : {wind} : {rain} : {area}\r\n            </p>\r\n        </React.Fragment>\r\n    ))\r\n}"]},"metadata":{},"sourceType":"module"}